<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WhatsApp Real-time Connection Setup</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        .setup-container {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            margin: 30px auto;
            max-width: 1200px;
            padding: 40px;
        }
        
        .option-card {
            border: 2px solid #e0e0e0;
            border-radius: 15px;
            padding: 25px;
            margin: 20px 0;
            transition: all 0.3s ease;
            cursor: pointer;
            position: relative;
        }
        
        .option-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
        }
        
        .option-card.selected {
            border-color: #667eea;
            background: linear-gradient(45deg, rgba(102, 126, 234, 0.1), rgba(118, 75, 162, 0.1));
        }
        
        .option-card.official {
            border-left: 5px solid #25d366;
        }
        
        .option-card.unofficial {
            border-left: 5px solid #ff9800;
        }
        
        .status-badge {
            position: absolute;
            top: 15px;
            right: 15px;
            padding: 5px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: bold;
        }
        
        .badge-official {
            background: #25d366;
            color: white;
        }
        
        .badge-unofficial {
            background: #ff9800;
            color: white;
        }
        
        .pros-cons {
            background: #f8f9fa;
            border-radius: 10px;
            padding: 15px;
            margin: 15px 0;
        }
        
        .setup-steps {
            background: #e3f2fd;
            border-left: 4px solid #2196f3;
            padding: 20px;
            margin: 20px 0;
            border-radius: 5px;
        }
        
        .qr-container {
            text-align: center;
            padding: 30px;
            background: white;
            border-radius: 15px;
            border: 2px dashed #667eea;
        }
        
        .webhook-config {
            background: #f0f0f0;
            padding: 20px;
            border-radius: 10px;
            font-family: monospace;
        }
        
        .status-indicator {
            display: inline-block;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            margin-right: 8px;
        }
        
        .status-connected { background: #28a745; }
        .status-disconnected { background: #dc3545; }
        .status-connecting { background: #ffc107; animation: pulse 1.5s infinite; }
        
        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.5; }
            100% { opacity: 1; }
        }
        
        .connection-status {
            background: white;
            border-radius: 10px;
            padding: 20px;
            margin: 20px 0;
            border-left: 4px solid #667eea;
        }
        
        .hidden { display: none; }
        
        .loading {
            border: 3px solid #f3f3f3;
            border-top: 3px solid #667eea;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            animation: spin 1s linear infinite;
            display: inline-block;
            margin-right: 10px;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="setup-container">
            <!-- Header -->
            <div class="text-center mb-5">
                <h1 class="display-4 fw-bold text-dark">
                    <i class="fab fa-whatsapp me-3" style="color: #25d366;"></i>
                    WhatsApp Real-time Setup
                </h1>
                <p class="lead text-muted">Choose your preferred method to connect WhatsApp for real-time message monitoring</p>
            </div>

            <!-- Connection Status -->
            <div class="connection-status">
                <h5><i class="fas fa-wifi me-2"></i>Connection Status</h5>
                <div id="connectionStatus">
                    <span class="status-indicator status-disconnected"></span>
                    <span>Not Connected - Please select and configure a connection method below</span>
                </div>
            </div>

            <!-- Option Selection -->
            <div class="row">
                <div class="col-md-6">
                    <div class="option-card official" onclick="selectOption('official')" id="officialCard">
                        <div class="status-badge badge-official">OFFICIAL</div>
                        <h4><i class="fas fa-shield-alt me-2"></i>WhatsApp Business API</h4>
                        <p class="text-muted">Official Meta/Facebook API with webhooks</p>
                        
                        <div class="pros-cons">
                            <div class="row">
                                <div class="col-6">
                                    <h6 class="text-success">‚úÖ Pros:</h6>
                                    <ul class="small">
                                        <li>Production ready</li>
                                        <li>Fully compliant</li>
                                        <li>Unlimited scale</li>
                                        <li>Rich features</li>
                                        <li>Reliable</li>
                                    </ul>
                                </div>
                                <div class="col-6">
                                    <h6 class="text-warning">‚ö†Ô∏è Cons:</h6>
                                    <ul class="small">
                                        <li>Requires verification</li>
                                        <li>Setup time (2-3 days)</li>
                                        <li>Volume pricing</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        
                        <div class="mt-3">
                            <span class="badge bg-success me-2">Best for Production</span>
                            <span class="badge bg-info">Government Use</span>
                        </div>
                    </div>
                </div>
                
                <div class="col-md-6">
                    <div class="option-card unofficial" onclick="selectOption('unofficial')" id="unofficialCard">
                        <div class="status-badge badge-unofficial">UNOFFICIAL</div>
                        <h4><i class="fas fa-globe me-2"></i>WhatsApp Web</h4>
                        <p class="text-muted">Direct connection via WhatsApp Web protocol</p>
                        
                        <div class="pros-cons">
                            <div class="row">
                                <div class="col-6">
                                    <h6 class="text-success">‚úÖ Pros:</h6>
                                    <ul class="small">
                                        <li>Quick setup (30 min)</li>
                                        <li>No verification needed</li>
                                        <li>Free to use</li>
                                        <li>Personal numbers OK</li>
                                        <li>Immediate testing</li>
                                    </ul>
                                </div>
                                <div class="col-6">
                                    <h6 class="text-danger">‚ùå Cons:</h6>
                                    <ul class="small">
                                        <li>Against WhatsApp ToS</li>
                                        <li>Risk of account ban</li>
                                        <li>Less stable</li>
                                        <li>Limited scale</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        
                        <div class="mt-3">
                            <span class="badge bg-warning me-2">Best for Testing</span>
                            <span class="badge bg-secondary">Quick Demo</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Setup Content -->
            <div class="mt-4">
                <!-- Official API Setup -->
                <div id="officialSetup" class="hidden">
                    <div class="setup-steps">
                        <h5><i class="fas fa-cogs me-2"></i>WhatsApp Business API Setup</h5>
                        
                        <div class="row">
                            <div class="col-md-8">
                                <h6>üìã Setup Steps:</h6>
                                <ol>
                                    <li>Go to <a href="https://developers.facebook.com/apps/" target="_blank">Meta Developer Console</a></li>
                                    <li>Create a new app ‚Üí Business ‚Üí WhatsApp</li>
                                    <li>Add WhatsApp product to your app</li>
                                    <li>Get your phone number verified</li>
                                    <li>Configure webhook with details below</li>
                                    <li>Test the connection</li>
                                </ol>
                                
                                <div class="webhook-config mt-3">
                                    <h6>üîó Webhook Configuration:</h6>
                                    <p><strong>Webhook URL:</strong><br>
                                    <code id="webhookUrl">http://165.227.39.216/webhook/whatsapp</code>
                                    <button class="btn btn-sm btn-outline-primary ms-2" onclick="copyToClipboard('webhookUrl')">
                                        <i class="fas fa-copy"></i> Copy
                                    </button></p>
                                    
                                    <p><strong>Verify Token:</strong><br>
                                    <code id="verifyToken">whatsapp_webhook_verify</code>
                                    <button class="btn btn-sm btn-outline-primary ms-2" onclick="copyToClipboard('verifyToken')">
                                        <i class="fas fa-copy"></i> Copy
                                    </button></p>
                                    
                                    <p><strong>Subscribe to:</strong> messages</p>
                                </div>
                            </div>
                            
                            <div class="col-md-4">
                                <h6>üì± Required Information:</h6>
                                <div class="mb-3">
                                    <label class="form-label">Phone Number ID:</label>
                                    <input type="text" class="form-control" id="phoneNumberId" placeholder="From Meta Console">
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Access Token:</label>
                                    <input type="text" class="form-control" id="accessToken" placeholder="From Meta Console">
                                </div>
                                <button class="btn btn-success" onclick="setupOfficialAPI()">
                                    <i class="fas fa-check"></i> Configure API
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mt-3">
                        <button class="btn btn-primary" onclick="testOfficialConnection()">
                            <i class="fas fa-test-tube"></i> Test Connection
                        </button>
                        <div id="officialStatus" class="mt-3"></div>
                    </div>
                </div>

                <!-- Unofficial Web Setup -->
                <div id="unofficialSetup" class="hidden">
                    <div class="setup-steps">
                        <h5><i class="fas fa-qrcode me-2"></i>WhatsApp Web Connection</h5>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <h6>üì± Quick Setup:</h6>
                                <ol>
                                    <li>Click "Start WhatsApp Web Connection" below</li>
                                    <li>QR code will appear</li>
                                    <li>Open WhatsApp on your phone</li>
                                    <li>Go to Settings ‚Üí Linked Devices</li>
                                    <li>Tap "Link a Device"</li>
                                    <li>Scan the QR code</li>
                                    <li>Connection established!</li>
                                </ol>
                                
                                <div class="alert alert-warning mt-3">
                                    <h6>‚ö†Ô∏è Important Notes:</h6>
                                    <ul class="mb-0">
                                        <li>Keep your phone connected to internet</li>
                                        <li>Don't log out from WhatsApp Web</li>
                                        <li>Use for testing purposes only</li>
                                        <li>May need to re-scan QR periodically</li>
                                    </ul>
                                </div>
                            </div>
                            
                            <div class="col-md-6">
                                <div class="qr-container" id="qrContainer">
                                    <i class="fas fa-qrcode fa-3x text-muted mb-3"></i>
                                    <p class="text-muted">Click "Connect" to generate QR code</p>
                                    <button class="btn btn-success" onclick="startWhatsAppWeb()">
                                        <i class="fas fa-link"></i> Start WhatsApp Web Connection
                                    </button>
                                    <br><br>
                                    <a href="https://web.whatsapp.com" target="_blank" class="btn btn-outline-success" onclick="window.open('https://web.whatsapp.com', '_blank'); openWhatsAppDirect(); return false;">
                                        <i class="fas fa-external-link-alt me-2"></i>Open WhatsApp Web Directly
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mt-3">
                        <button class="btn btn-danger" onclick="disconnectWhatsAppWeb()" id="disconnectBtn" style="display: none;">
                            <i class="fas fa-unlink"></i> Disconnect
                        </button>
                        <div id="webStatus" class="mt-3"></div>
                    </div>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="text-center mt-5" id="actionButtons" style="display: none;">
                <button class="btn btn-success btn-lg me-3" onclick="startMonitoring()">
                    <i class="fas fa-play"></i> Start Real-time Monitoring
                </button>
                <button class="btn btn-outline-primary btn-lg" onclick="openDashboard()">
                    <i class="fas fa-tachometer-alt"></i> Open Dashboard
                </button>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let selectedOption = null;
        let connectionStatus = 'disconnected';
        let qrCheckInterval = null;

        // Option Selection
        function selectOption(option) {
            selectedOption = option;
            
            // Update UI
            document.querySelectorAll('.option-card').forEach(card => {
                card.classList.remove('selected');
            });
            
            document.getElementById(option + 'Card').classList.add('selected');
            
            // Show/hide setup sections
            document.getElementById('officialSetup').classList.toggle('hidden', option !== 'official');
            document.getElementById('unofficialSetup').classList.toggle('hidden', option !== 'unofficial');
            
            updateConnectionStatus('disconnected', `Selected ${option === 'official' ? 'Official API' : 'WhatsApp Web'} - Please configure below`);
        }

        // Connection Status Management
        function updateConnectionStatus(status, message) {
            connectionStatus = status;
            const statusElement = document.getElementById('connectionStatus');
            const indicator = statusElement.querySelector('.status-indicator');
            
            indicator.className = `status-indicator status-${status}`;
            statusElement.querySelector('span:last-child').textContent = message;
            
            // Show action buttons if connected
            document.getElementById('actionButtons').style.display = 
                status === 'connected' ? 'block' : 'none';
        }

        // Official API Functions
        async function setupOfficialAPI() {
            const phoneNumberId = document.getElementById('phoneNumberId').value;
            const accessToken = document.getElementById('accessToken').value;
            
            if (!phoneNumberId || !accessToken) {
                alert('Please enter both Phone Number ID and Access Token');
                return;
            }
            
            try {
                updateConnectionStatus('connecting', 'Configuring Official API...');
                
                const response = await fetch('/api/whatsapp/setup/official', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        phone_number_id: phoneNumberId,
                        access_token: accessToken
                    })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    updateConnectionStatus('connected', 'Official API configured successfully!');
                    document.getElementById('officialStatus').innerHTML = 
                        '<div class="alert alert-success">‚úÖ WhatsApp Business API ready for real-time monitoring</div>';
                } else {
                    updateConnectionStatus('disconnected', 'Configuration failed');
                    document.getElementById('officialStatus').innerHTML = 
                        `<div class="alert alert-danger">‚ùå Error: ${result.error}</div>`;
                }
            } catch (error) {
                updateConnectionStatus('disconnected', 'Configuration error');
                document.getElementById('officialStatus').innerHTML = 
                    `<div class="alert alert-danger">‚ùå Error: ${error.message}</div>`;
            }
        }

        async function testOfficialConnection() {
            try {
                const response = await fetch('/api/whatsapp/test/official');
                const result = await response.json();
                
                document.getElementById('officialStatus').innerHTML = result.success ?
                    '<div class="alert alert-success">‚úÖ Official API connection test successful!</div>' :
                    `<div class="alert alert-danger">‚ùå Connection test failed: ${result.error}</div>`;
            } catch (error) {
                document.getElementById('officialStatus').innerHTML = 
                    `<div class="alert alert-danger">‚ùå Test error: ${error.message}</div>`;
            }
        }

        // WhatsApp Web Functions
        async function startWhatsAppWeb() {
            try {
                updateConnectionStatus('connecting', 'Starting WhatsApp Web connection...');
                
                const response = await fetch('/api/whatsapp/start/web', {
                    method: 'POST'
                });
                
                const result = await response.json();
                
                if (result.success) {
                    // Start checking for QR code
                    checkQRCode();
                    document.getElementById('qrContainer').innerHTML = 
                        '<div class="loading"></div><p>Generating QR code...</p>';
                    
                    // Enable disconnect button
                    document.getElementById('disconnectBtn').style.display = 'inline-block';
                } else {
                    updateConnectionStatus('disconnected', 'Failed to start WhatsApp Web');
                    showWebStatus('danger', result.error);
                }
            } catch (error) {
                updateConnectionStatus('disconnected', 'WhatsApp Web error');
                showWebStatus('danger', error.message);
            }
        }

        async function checkQRCode() {
            qrCheckInterval = setInterval(async () => {
                try {
                    const response = await fetch('/api/whatsapp/qr');
                    const result = await response.json();
                    
                    if (result.qr_code) {
                        document.getElementById('qrContainer').innerHTML = `
                            <img src="data:image/png;base64,${result.qr_code}" alt="QR Code" style="max-width: 250px;">
                            <p class="mt-2">Scan this QR code with WhatsApp</p>
                        `;
                    } else if (result.connected) {
                        clearInterval(qrCheckInterval);
                        updateConnectionStatus('connected', 'WhatsApp Web connected successfully!');
                        document.getElementById('qrContainer').innerHTML = `
                            <i class="fas fa-check-circle fa-3x text-success mb-3"></i>
                            <p class="text-success"><strong>Connected!</strong></p>
                            <p>Ready for real-time monitoring</p>
                        `;
                        showWebStatus('success', 'WhatsApp Web connection established');
                    }
                } catch (error) {
                    console.error('QR check error:', error);
                }
            }, 2000);
        }

        async function disconnectWhatsAppWeb() {
            try {
                clearInterval(qrCheckInterval);
                
                const response = await fetch('/api/whatsapp/disconnect/web', {
                    method: 'POST'
                });
                
                updateConnectionStatus('disconnected', 'WhatsApp Web disconnected');
                document.getElementById('qrContainer').innerHTML = `
                    <i class="fas fa-qrcode fa-3x text-muted mb-3"></i>
                    <p class="text-muted">Click "Connect" to generate QR code</p>
                    <button class="btn btn-success" onclick="startWhatsAppWeb()">
                        <i class="fas fa-link"></i> Start WhatsApp Web Connection
                    </button>
                `;
                
                document.getElementById('disconnectBtn').style.display = 'none';
                showWebStatus('info', 'WhatsApp Web Disconnected (but monitoring continues)');
                
            } catch (error) {
                showWebStatus('danger', 'Disconnect error: ' + error.message);
            }
        }

        function showWebStatus(type, message) {
            document.getElementById('webStatus').innerHTML = 
                `<div class="alert alert-${type}">${message}</div>`;
        }

        // Monitoring Functions
        async function startMonitoring() {
            try {
                const response = await fetch('/api/realtime/start', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        connection_type: selectedOption
                    })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    alert('‚úÖ Real-time monitoring started! Messages will be analyzed automatically.');
                    updateConnectionStatus('connected', `${selectedOption === 'official' ? 'Official API' : 'WhatsApp Web'} - Monitoring Active`);
                } else {
                    alert('‚ùå Failed to start monitoring: ' + result.error);
                }
            } catch (error) {
                alert('‚ùå Error starting monitoring: ' + error.message);
            }
        }

        function openDashboard() {
            window.open('/realtime', '_blank');
        }

        // Utility Functions
        function copyToClipboard(elementId) {
            const text = document.getElementById(elementId).textContent;
            navigator.clipboard.writeText(text).then(() => {
                const button = event.target.closest('button');
                const originalHTML = button.innerHTML;
                button.innerHTML = '<i class="fas fa-check"></i> Copied!';
                setTimeout(() => {
                    button.innerHTML = originalHTML;
                }, 2000);
            });
        }

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            updateConnectionStatus();
            setInterval(updateConnectionStatus, 5000);
            checkCurrentStatus();
        });

        async function checkCurrentStatus() {
            try {
                const response = await fetch('/api/whatsapp/web-status');
                const result = await response.json();
                
                if (result.connected) {
                    updateConnectionStatus('connected', 
                        `Already connected via ${result.connection_type === 'official' ? 'Official API' : 'WhatsApp Web'}`);
                    selectOption(result.connection_type);
                }
            } catch (error) {
                console.log('No existing connection found');
            }
        }
        
        function checkConnectionStatus() {
            fetch("/api/whatsapp/web-status")
                .then(response => response.json())
                .then(data => {
                    const statusDiv = document.getElementById("simpleStatus");
                    const statusText = document.getElementById("simpleStatusText");
                    
                    if (statusDiv && statusText) {
                        if (data.connected) {
                            statusDiv.className = "alert alert-success text-center mb-4";
                            statusText.textContent = "Connected via Manual WhatsApp Web";
                        } else {
                            statusDiv.className = "alert alert-warning text-center mb-4";
                            statusText.textContent = "Not Connected";
                        }
                    }
                })
                .catch(error => {
                    document.getElementById("simpleStatusText").textContent = "Error checking status";
                });
        }
        
        // Auto-check status
        document.addEventListener("DOMContentLoaded", function() {
            checkConnectionStatus();
            setInterval(checkConnectionStatus, 5000);
        });
        

        function openWhatsAppDirect() {
            console.log("Button clicked - starting 3 second timer");
            setTimeout(() => {
                console.log("3 seconds passed - showing popup");
                if (confirm("Have you successfully connected to WhatsApp Web? Click OK to register the connection.")) {
                    fetch("/api/whatsapp/manual/connect", { method: "POST" })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                alert("Connection registered successfully!");
                                setTimeout(checkConnectionStatus, 1000);
                            }
                        })
                        .catch(error => console.error("Error:", error));
                }
            }, 3000);
        }
        // Dynamic status display
        document.addEventListener("DOMContentLoaded", function() {
            const statusDiv = document.createElement("div");
            statusDiv.id = "dynamicStatus";
            statusDiv.className = "alert alert-success text-center";
            statusDiv.style.margin = "20px 0";
            statusDiv.innerHTML = "<strong>Status:</strong> <span id=\"dynamicStatusText\">Checking...</span>";
            
            const title = document.querySelector("h1");
            if (title) {
                title.parentNode.insertBefore(statusDiv, title.nextSibling);
            }
            
    </script>
</body>
</html>
